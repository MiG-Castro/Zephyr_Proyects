Proyectos

Todos los proyectos se compilaron/programaron con el SDK&toochain 3.0.1

AGREGAR y/o ARCHIVO xiao_ble_nrf52840_sense.overlay si se desea:
- Desactivar los sensores integrados del xiao
- Habilitar i2c1
- configurar baud-rate comunicación serial

NOTA: Esto también se puede hacer modificando el archivo xio_ble_nrf52840_sense.dts
      SIN EMBARGO ESTE ES EL ARCHIVO DEL SDK. LAS CONFIGURACIONES QUE SE LE APLIQUEN
      SE APLICARAN A TODOS LOS PROYECTOS QUE USEN EL BOARD xio_ble_nrf52840_sense.
                            ¡NO ES UNA BUENA PRACTICA!
      
      Los archivos .overlay modifican el devicetree para cada proyecto. Es mas seguro!

BNO055 ***************************************************************************
"Primera" version de prueba
Codigo mas comentado aunque no tan limpio/eficiente ...
Se uso como base para la creación de la librería

Para usar el BNO se tuvo que:
1. habilitar I2C en prj.conf
2. habilitar el I2C-1 en devicetree -> add xiao_ble_nrf52840_sense.overlay

BNO055 Library *******************************************************************
Librería personalizada basada en el código de  "BNO055"
Codigo mas limpio/eficiente pero menos comentado

De igual manera se tuve que:
1. habilitar I2C en prj.conf
2. habilitar el I2C-1 en devicetree ->  add xiao_ble_nrf52840_sense.overlay

Habilitar los LOG's en prj.conf si se desea ver los mensajes de error/info de la librería

La configuración del baud rate del puerto serial se hace en devicetree
ejemplo: &uart0 {current-speed = <115200>;};
uart0 es el que se usa para el puerto serial

Perfil_IMU_Periferico *******************************************************************
Librería personalizada -> Servicio my_imu_ble_service
Codigo de implementación para PERIFERICO simple
- Envia arreglos en notificaciones e indicaciones en un hilo sencillo
- Intenta la negociación de parámetros (conexión, PHY, data length -> MTU)
  Sin embargo, el dispositivo central es el que toma la decision final de los parámetros ...
- Imprime el addr y nombre del dispositivo
- Proporciona información adicional al activar los LOG's

Requiere de modificaciones en:
- prj.conf
  Configuración de:
  - Nombre BLE
  - Parámetros de conexión
  - POTENCIA DE TX
- cmake.txt   (para avisar al compilador que debe de agregar la librería)
- devicetree  (para el I2C)
- add de kconfig  (Archivo que permite añadir nuevos "CONFIG" al prj.conf

UUID Servicio: 5CF33500-538C-4DC9-B54B-0B102623558D
UUID Caracteristica 1 - Sensor data (notificación): CF33501-538C-4DC9-B54B-0B102623558D
UUID Caracteristica 2 - Detección ejercicio (indicacion): CF33502-538C-4DC9-B54B-0B102623558D

AMBAS CARACTERISTICAS ENVIAN ARREGLOS uint8

===============================================================================================
CODIGOS PYTHON

Read_bin_00
- Lee archivos .bin
- Toma los datos crudos del BNO y los convierte a unidades
- Revisa perdidas de paquetes

Receptor_Bluethooth_v00
- Se conecta a varios periféricos BLE
  - Conexión basado en la lista de nombres|direcciones (MODIFICAR linea 116-117)
  - Solo se suscribe a una característica
- configurable para:
  - guardar datos recibidos (en archivos .bin)
  - imprimir datos recibidos
  - enviar datos recibidos al localhost

Receptor_Bluethooth_v01
Version mejorada de Receptor_Bluethooth_v00
- Acepta la suscripción de 2 características (notificacion&indicacion)
Nota: SE CONECTA A LOS DISPOSITIVOS SOLO SI SE USAN SUS DIRECCIONES
